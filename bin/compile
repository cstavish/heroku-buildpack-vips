#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

arrow() {
  sed -u 's/^/-----> /'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENVFILE=$3
BP_DIR=`cd $(dirname $0); cd ..; pwd`
TARBALL_URL=https://s3.amazonaws.com/proscia-viewer/vips-8.3.0%2Bopenslide-3.4.1.tar.gz

echo "Installing libvips" | arrow

cd $BUILD_DIR

output_dir="${BUILD_DIR}/vendor/vips"
# Output library also to temp dir accordingly to pkg-config paths
temp_app_dir="/app/vendor/vips"
mkdir -p $output_dir
mkdir -p $temp_app_dir

echo "Downloading libvips from $TARBALL_URL and unpacking" | indent
curl -s $TARBALL_URL | tar xz -C $output_dir

echo "Downloading additional dependencies" | indent
curl -s https://s3.amazonaws.com/proscia-viewer/additional_deps.tar.gz.enc -O
openssl enc -d -aes-256-cbc -in additional_deps.tar.gz.enc -out additional_deps.tar.gz -pass file:$ENVFILE/DEPENDENCIES_KEY -md md5
tar xzf additional_deps.tar.gz -C $output_dir

rm additional_deps.tar.gz additional_deps.tar.gz.enc

if [ $? != 0 ]; then
  echo "Error downloading vips and unpacking to build dir" | indent
  exit 1
fi

if [ $? != 0 ]; then
  echo "Error downloading vips and unpacking to app dir" | indent
  exit 1
fi
mkdir -p $BUILD_DIR/bin/
cp -r $output_dir/bin/* $BUILD_DIR/bin/

echo "libvips installed" | indent

#echo "Creating new env var in $3" | indent

echo "\$PKG_CONFIG_PATH:/app/vendor/vips/lib/pkgconfig" > $3/PKG_CONFIG_PATH

#echo "Installing vips .profile.d files" | indent

mkdir $BUILD_DIR/.profile.d
cp -n $BP_DIR/.profile.d/* $BUILD_DIR/.profile.d/

#echo ".profile.d files installed" | indent
